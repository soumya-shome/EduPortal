# Generated by Django 5.2.4 on 2025-08-04 20:05

from django.db import migrations, models
import django.db.models.deletion
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_add_bio_field'),
    ]

    operations = [
        # Add missing fields to Course model
        migrations.AddField(
            model_name='course',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='course_thumbnails/'),
        ),
        migrations.AddField(
            model_name='course',
            name='syllabus',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='duration_weeks',
            field=models.PositiveIntegerField(default=8),
        ),
        migrations.AlterField(
            model_name='course',
            name='max_students',
            field=models.PositiveIntegerField(default=50),
        ),
        
        # Add missing fields to StudyMaterial model
        migrations.AddField(
            model_name='studymaterial',
            name='file_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studymaterial',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='studymaterial',
            name='week_number',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studymaterial',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        
        # Add missing fields to Enrollment model
        migrations.AddField(
            model_name='enrollment',
            name='rating',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='review',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        
        # Add missing fields to ExamAttempt model
        migrations.AddField(
            model_name='examattempt',
            name='time_taken_minutes',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='examattempt',
            name='score',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='examattempt',
            name='is_passed',
            field=models.BooleanField(default=False),
        ),
        
        # Add missing fields to Answer model
        migrations.AddField(
            model_name='answer',
            name='is_correct',
            field=models.BooleanField(default=False),
        ),
        
        # Add missing fields to FeeTransaction model
        migrations.AlterField(
            model_name='feetransaction',
            name='transaction_type',
            field=models.CharField(choices=[('course', 'Course Fee'), ('exam', 'Exam Fee'), ('material', 'Study Material'), ('other', 'Other')], default='course', max_length=20),
        ),
        migrations.AlterField(
            model_name='feetransaction',
            name='payment_method',
            field=models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('online', 'Online Payment')], default='online', max_length=20),
        ),
        migrations.AlterField(
            model_name='feetransaction',
            name='transaction_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        
        # Create WeeklyDetail model
        migrations.CreateModel(
            name='WeeklyDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('topics_covered', models.TextField()),
                ('assignments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_details', to='api.course')),
            ],
            options={
                'db_table': 'weekly_details',
                'unique_together': {('course', 'week_number')},
                'ordering': ['week_number'],
            },
        ),
        
        # Create TeacherSalary model
        migrations.CreateModel(
            name='TeacherSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('online', 'Online Payment')], default='bank_transfer', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_records', to='api.user')),
            ],
            options={
                'db_table': 'teacher_salaries',
                'unique_together': {('teacher', 'month')},
                'ordering': ['-month'],
            },
        ),
        
        # Create StudentProgress model
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveIntegerField()),
                ('attendance_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('assignment_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quiz_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('participation_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('teacher_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='api.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='api.user')),
            ],
            options={
                'db_table': 'student_progress',
                'unique_together': {('student', 'course', 'week_number')},
                'ordering': ['week_number'],
            },
        ),
    ] 